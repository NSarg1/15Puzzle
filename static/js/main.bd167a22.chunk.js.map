{"version":3,"sources":["sass/assets/win.png","RndNumGenerator.js","components/TileContainer/Tile/Tile.jsx","components/TileContainer/TileContainer.jsx","pages/WelcomePage/Welcome.jsx","components/GameInit/GameInit.jsx","pages/WinPage/WinPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","rndNumArr","data","id","num","animate","rndNumGenerator","arr","rndNum","Math","floor","random","undefined","find","el","push","i","forEach","ind","Tile","classes","click","className","onClick","bind","TileContainer","table","initStyle","start","join","map","tile","key","Welcome","doesShow","gameInit","instructionStyle","GameInit","gameReset","style","WinPage","src","require","alt","App","state","setState","didWin","setToNull","changeNum","tileIndex","findIndex","nullIndex","toggleInstruction","intructionShow","winCheker","isTrueArr","pop","reduce","acc","cur","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd167a22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/win.252178bb.png\";","let rndNumArr = [];\r\nexport const data = [\r\n    { id: 0, num: 1, animate: null },\r\n    { id: 1, num: 2, animate: null },\r\n    { id: 2, num: 3, animate: null },\r\n    { id: 3, num: 4, animate: null },\r\n    { id: 4, num: 5, animate: null },\r\n    { id: 5, num: 6, animate: null },\r\n    { id: 6, num: 7, animate: null },\r\n    { id: 7, num: 8, animate: null },\r\n    { id: 8, num: 9, animate: null },\r\n    { id: 9, num: 10, animate: null },\r\n    { id: 10, num: 11, animate: null },\r\n    { id: 11, num: 12, animate: null },\r\n    { id: 12, num: 13, animate: null },\r\n    { id: 13, num: 14, animate: null },\r\n    { id: 14, num: 15, animate: null },\r\n    { id: 15, num: 16, animate: null },\r\n];\r\n\r\nconst rndNumGenerator = arr => {\r\n    let rndNum = Math.floor(Math.random() * 16 + 1);\r\n    let doesExist = arr.find(el => el === rndNum);\r\n\r\n    if (doesExist === undefined) {\r\n        arr.push(rndNum);\r\n    } else {\r\n        return rndNumGenerator(arr);\r\n    }\r\n    return arr;\r\n};\r\n\r\nfor (let i = 0; i < 16; i++) {\r\n    rndNumGenerator(rndNumArr);\r\n}\r\n\r\ndata.forEach((el, ind) => {\r\n    if (rndNumArr[ind] === 16) {\r\n        rndNumArr[ind] = null;\r\n    }\r\n    el.num = rndNumArr[ind];\r\n});\r\n","import React from \"react\";\r\n\r\nconst Tile = ({ num, id, click, animate }) => {\r\n\tlet classes;\r\n\tif (num === null) {\r\n\t\tclasses = `item-${num} ${animate}`;\r\n\t} else {\r\n\t\tclasses = `item item-${num} ${animate}`;\r\n\t}\r\n\r\n\treturn (\r\n        <div className='Tile' \r\n        onClick={click.bind(this, id)}\r\n        //  onTouchEnd={click.bind(this, id)}\r\n         >\r\n\t\t\t<div className={classes}>\r\n\t\t\t\t<div className='Tile_num'>{num}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Tile;\r\n","import React from 'react';\r\nimport Tile from './Tile/Tile';\r\n\r\nconst TileContainer = ({ table, click, start }) => {\r\n    let initStyle = ['TileContainer'];\r\n    if (start) {\r\n        initStyle.push('zoomInCenter');\r\n    }\r\n    initStyle = initStyle.join(' ');\r\n    return (\r\n        <div className={initStyle}>\r\n            <div className=\"TileContainer_box\">\r\n                {table.map(tile => {\r\n                    return (\r\n                        <Tile\r\n                            key={tile.id}\r\n                            click={click}\r\n                            id={tile.id}\r\n                            num={tile.num}\r\n                            animate={tile.animate}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TileContainer;\r\n","import React from 'react';\r\n\r\nconst Welcome = ({ doesShow, click, gameInit }) => {\r\n    let instructionStyle = ['Welcome_instructions'];\r\n\r\n    if (doesShow === true) {\r\n        instructionStyle.push('slideIn');\r\n    } else if (doesShow === false) {\r\n        instructionStyle.push('slideOut');\r\n    }\r\n\r\n    instructionStyle = instructionStyle.join(' ');\r\n    return (\r\n        <div className=\"Welcome\">\r\n            <div className=\"Welcome_title\">\r\n                <div className=\"btn btn-white\" onClick={gameInit}>\r\n                    Start\r\n                </div>\r\n                <div className=\"btn btn-white\" onClick={click}>\r\n                    Instructions\r\n                </div>\r\n            </div>\r\n            <div className={instructionStyle}>\r\n                <p>\r\n                    Game rules are very simple. You must order all numbers in sequence. So the final\r\n                    result must be 1-15, starting from top left corner.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from 'react';\r\n\r\nconst GameInit = ({ gameReset, start }) => {\r\n    let style = ['GameInit'];\r\n    if (start) {\r\n        style.push('slideFromTop');\r\n    }\r\n    style = style.join(' ');\r\n\r\n    return (\r\n        <div className={style}>\r\n            <div className=\"GameInit_btn\" onClick={gameReset}>\r\n                Start again\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameInit;\r\n","import React from 'react';\r\n\r\nconst WinPage = ({gameReset}) => {\r\n    return (\r\n        <div className=\"WinPage\">\r\n        <div className=\"WinPage_title\">Congrats! <br/> You have won.</div>\r\n            <figure className=\"WinPage_image\">\r\n                <img src={require('../../sass/assets/win.png')} alt=\"Congrutulation\" />\r\n                <figcaption className=\"fig\" onClick={gameReset}>Play Again</figcaption>\r\n            </figure>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WinPage;\r\n","import React, { Component } from \"react\";\r\nimport { data } from \"./RndNumGenerator\";\r\nimport TileContainer from \"./components/TileContainer/TileContainer\";\r\nimport Welcome from \"./pages/WelcomePage/Welcome\";\r\nimport GameInit from \"./components/GameInit/GameInit\";\r\nimport WinPage from \"./pages/WinPage/WinPage\";\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdidWin: false,\r\n\t\t\tWelcome: {\r\n\t\t\t\tintructionShow: null,\r\n\t\t\t\tstart: false,\r\n\t\t\t},\r\n\t\t\ttable: data,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tif (this.state.didWin === false) {\r\n\t\t\tthis.winCheker();\r\n\t\t}\r\n\t}\r\n\r\n\tgameReset = () => {\r\n\t\tlet rndNumArr = [];\r\n\t\tconst data = [...this.state.table];\r\n\r\n\t\tconst rndNumGenerator = (arr) => {\r\n\t\t\tlet rndNum = Math.floor(Math.random() * 16 + 1);\r\n\t\t\tlet doesExist = arr.find((el) => el === rndNum);\r\n\r\n\t\t\tif (doesExist === undefined) {\r\n\t\t\t\tarr.push(rndNum);\r\n\t\t\t} else {\r\n\t\t\t\treturn rndNumGenerator(arr);\r\n\t\t\t}\r\n\t\t\treturn arr;\r\n\t\t};\r\n\r\n\t\tfor (let i = 0; i < 16; i++) {\r\n\t\t\trndNumGenerator(rndNumArr);\r\n\t\t}\r\n\r\n\t\tdata.forEach((el, ind) => {\r\n\t\t\tif (rndNumArr[ind] === 16) {\r\n\t\t\t\trndNumArr[ind] = null;\r\n\t\t\t}\r\n\t\t\tel.num = rndNumArr[ind];\r\n\t\t});\r\n\r\n\t\tthis.setState({ table: data, didWin: false });\r\n\t};\r\n\r\n\tsetToNull = () => {\r\n\t\tlet table = [...this.state.table];\r\n\t\ttable.forEach((el) => {\r\n\t\t\tel.animate = null;\r\n\t\t});\r\n\t\tthis.setState({ table: table });\r\n\t};\r\n\r\n\tchangeNum = (id) => {\r\n\t\tlet tileIndex = this.state.table.findIndex((el) => {\r\n\t\t\treturn el.id === id;\r\n\t\t});\r\n\t\tconst table = [...this.state.table];\r\n\t\tconst nullIndex = this.state.table.findIndex((el) => {\r\n\t\t\treturn el.num === null;\r\n\t\t});\r\n\r\n\t\tif (\r\n\t\t\t(nullIndex - tileIndex === 1 && tileIndex !== 3 && tileIndex !== 7 && tileIndex !== 11) ||\r\n\t\t\tnullIndex - tileIndex === 4 ||\r\n\t\t\t(tileIndex - nullIndex === 1 && tileIndex !== 4 && tileIndex !== 8 && tileIndex !== 12) ||\r\n\t\t\ttileIndex - nullIndex === 4\r\n\t\t) {\r\n\t\t\tthis.setToNull();\r\n\t\t\ttable[nullIndex].num = table[tileIndex].num;\r\n\t\t\tif (nullIndex - tileIndex === 1) table[nullIndex].animate = \"slideToLeft\";\r\n\t\t\tif (nullIndex - tileIndex === 4) table[nullIndex].animate = \"slideToBottom\";\r\n\t\t\tif (tileIndex - nullIndex === 1) table[nullIndex].animate = \"slideToRight\";\r\n\t\t\tif (tileIndex - nullIndex === 4) table[nullIndex].animate = \"slideToTop\";\r\n\r\n\t\t\tthis.setState({ table: table });\r\n\t\t\ttable[tileIndex].num = null;\r\n\t\t}\r\n\t};\r\n\r\n\ttoggleInstruction = () => {\r\n\t\tlet Welcome = { ...this.state.Welcome };\r\n\t\tWelcome.intructionShow = !this.state.Welcome.intructionShow;\r\n\t\tthis.setState({ Welcome: Welcome });\r\n\t};\r\n\r\n\tgameInit = () => {\r\n\t\tlet Welcome = { ...this.state.Welcome };\r\n\t\tWelcome.start = true;\r\n\t\tthis.setState({ Welcome: Welcome });\r\n\t};\r\n\r\n\twinCheker = () => {\r\n\t\tlet data = [...this.state.table];\r\n\t\tlet isTrueArr = [];\r\n\t\tdata.pop();\r\n\t\tdata.forEach((el) => {\r\n\t\t\tisTrueArr.push(el.num - 1 === el.id);\r\n\t\t});\r\n\r\n\t\tconst didWin = isTrueArr.reduce((acc, cur) => {\r\n\t\t\treturn acc + cur;\r\n\t\t});\r\n\r\n\t\tif (didWin === 15) {\r\n\t\t\tthis.setState({ didWin: true });\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='App'>\r\n\t\t\t\t{this.state.didWin === true ? <WinPage gameReset={this.gameReset} /> : null}\r\n\t\t\t\t<GameInit gameReset={this.gameReset} start={this.state.Welcome.start} />\r\n\t\t\t\t{this.state.Welcome.start === false ? (\r\n\t\t\t\t\t<Welcome\r\n\t\t\t\t\t\tgameInit={this.gameInit}\r\n\t\t\t\t\t\tdoesShow={this.state.Welcome.intructionShow}\r\n\t\t\t\t\t\tclick={this.toggleInstruction}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : null}\r\n\t\t\t\t<TileContainer\r\n\t\t\t\t\ttable={this.state.table}\r\n\t\t\t\t\tclick={this.changeNum}\r\n\t\t\t\t\tstart={this.state.Welcome.start}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './main.scss';\r\nimport './queries.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}