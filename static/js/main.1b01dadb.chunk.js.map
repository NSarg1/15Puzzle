{"version":3,"sources":["sass/assets/win.png","RndNumGenerator.js","components/TileContainer/Tile/Tile.jsx","components/TileContainer/TileContainer.jsx","components/WelcomePage/Welcome.jsx","components/GameInit/GameInit.jsx","components/WinPage/WinPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","rndNum","rndNumArr","data","id","num","animate","rndNumGenerator","Math","floor","random","undefined","find","el","push","i","forEach","ind","Tile","classes","click","className","onClick","TileContainer","table","initStyle","start","join","map","tile","key","Welcome","doesShow","gameInit","instructionStyle","GameInit","gameReset","style","WinPage","src","require","alt","App","setState","didWin","setToNull","state","changeNum","tileIndex","findIndex","nullIndex","toggleInstruction","intructionShow","winCheker","isTrueArr","pop","reduce","acc","cur","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b01dadb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/win.252178bb.png\";","let rndNum, rndNumArr, doesExist;\r\nrndNumArr = [];\r\nexport const data = [\r\n    { id: 0, num: 1, animate: null },\r\n    { id: 1, num: 2, animate: null },\r\n    { id: 2, num: 3, animate: null },\r\n    { id: 3, num: 4, animate: null },\r\n    { id: 4, num: 5, animate: null },\r\n    { id: 5, num: 6, animate: null },\r\n    { id: 6, num: 7, animate: null },\r\n    { id: 7, num: 8, animate: null },\r\n    { id: 8, num: 9, animate: null },\r\n    { id: 9, num: 10, animate: null },\r\n    { id: 10, num: 11, animate: null },\r\n    { id: 11, num: 12, animate: null },\r\n    { id: 12, num: 13, animate: null },\r\n    { id: 13, num: 14, animate: null },\r\n    { id: 14, num: 15, animate: null },\r\n    { id: 15, num: 16, animate: null }\r\n];\r\n\r\nexport const rndNumGenerator = () => {\r\n    rndNum = Math.floor(Math.random() * 16 + 1);\r\n    doesExist = rndNumArr.find(el => el === rndNum);\r\n\r\n    if (doesExist === undefined) {\r\n        rndNumArr.push(rndNum);\r\n    } else {\r\n        return rndNumGenerator();\r\n    }\r\n};\r\n\r\nfor (let i = 0; i < 16; i++) {\r\n    rndNumGenerator();\r\n}\r\n\r\ndata.forEach((el, ind) => {\r\n    if (rndNumArr[ind] === 16) {\r\n        rndNumArr[ind] = null;\r\n    }\r\n    el.num = rndNumArr[ind];\r\n});\r\n","import React from 'react';\r\n\r\nconst Tile = ({ num, id, click, animate }) => {\r\n    let classes;\r\n    if (num === null) {\r\n        classes = `item-${num} ${animate}`;\r\n    } else {\r\n        classes = `item item-${num} ${animate}`;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Tile\" onClick={() => click(id)}>\r\n            <div className={classes}>\r\n                <div className=\"Tile_num\">{num}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tile;\r\n","import React from 'react';\r\nimport Tile from './Tile/Tile';\r\n\r\nconst TileContainer = ({ table, click, start }) => {\r\n    let initStyle = ['TileContainer'];\r\n    if (start) {\r\n        initStyle.push('zoomInCenter');\r\n    }\r\n    initStyle = initStyle.join(' ');\r\n    return (\r\n        <div className={initStyle}>\r\n            <div className=\"TileContainer_box\">\r\n                {table.map(tile => {\r\n                    return (\r\n                        <Tile\r\n                            key={tile.id}\r\n                            click={click}\r\n                            id={tile.id}\r\n                            num={tile.num}\r\n                            animate={tile.animate}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TileContainer;\r\n","import React from 'react';\r\n\r\nconst Welcome = ({ doesShow, click, gameInit }) => {\r\n    let instructionStyle = ['Welcome_instructions'];\r\n\r\n    if (doesShow === true) {\r\n        instructionStyle.push('slideIn');\r\n    } else if (doesShow === false) {\r\n        instructionStyle.push('slideOut');\r\n    }\r\n\r\n    instructionStyle = instructionStyle.join(' ');\r\n    return (\r\n        <div className=\"Welcome\">\r\n            <div className=\"Welcome_title\">\r\n                <div className=\"btn btn-white\" onClick={() => gameInit()}>\r\n                    Start\r\n                </div>\r\n                <div className=\"btn btn-white\" onClick={() => click()}>\r\n                    Instructions\r\n                </div>\r\n            </div>\r\n            <div className={instructionStyle}>\r\n                <p>\r\n                    Game rules are very simple. You must order all numbers in sequence. So the final\r\n                    result must be 1-15, starting from top left corner.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from 'react';\r\n\r\nconst GameInit = ({ gameReset, start }) => {\r\n    let style = ['GameInit'];\r\n    if (start) {\r\n        style.push('slideFromTop');\r\n    }\r\n    style = style.join(' ');\r\n\r\n    return (\r\n        <div className={style}>\r\n            <div className=\"GameInit_btn\" onClick={() => gameReset()}>\r\n                Start again\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameInit;\r\n","import React from 'react';\r\n\r\nconst WinPage = ({gameReset}) => {\r\n    return (\r\n        <div className=\"WinPage\">\r\n        <div className=\"WinPage_title\">Congrats! <br/> You have won.</div>\r\n            <figure className=\"WinPage_image\">\r\n                <img src={require('../../sass/assets/win.png')} alt=\"Congrutulation\" />\r\n                <figcaption className=\"fig\" onClick={()=> gameReset()}>Play Again</figcaption>\r\n            </figure>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WinPage;\r\n","import React, { Component } from 'react';\nimport { data } from './RndNumGenerator';\nimport TileContainer from './components/TileContainer/TileContainer';\nimport Welcome from './components/WelcomePage/Welcome';\nimport GameInit from './components/GameInit/GameInit';\nimport WinPage from './components/WinPage/WinPage';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            didWin: false,\n            Welcome: {\n                intructionShow: null,\n                start: false\n            },\n            table: data\n        };\n    }\n\n    componentDidUpdate() {\n        this.winCheker();\n    }\n\n    gameReset = () => {\n        let rndNum, rndNumArr, doesExist;\n        rndNumArr = [];\n        const data = [\n            { id: 0, num: 1, animate: null },\n            { id: 1, num: 2, animate: null },\n            { id: 2, num: 3, animate: null },\n            { id: 3, num: 4, animate: null },\n            { id: 4, num: 5, animate: null },\n            { id: 5, num: 6, animate: null },\n            { id: 6, num: 7, animate: null },\n            { id: 7, num: 8, animate: null },\n            { id: 8, num: 9, animate: null },\n            { id: 9, num: 10, animate: null },\n            { id: 10, num: 11, animate: null },\n            { id: 11, num: 12, animate: null },\n            { id: 12, num: 13, animate: null },\n            { id: 13, num: 14, animate: null },\n            { id: 14, num: 15, animate: null },\n            { id: 15, num: 16, animate: null }\n        ];\n\n        const rndNumGenerator = () => {\n            rndNum = Math.floor(Math.random() * 16 + 1);\n            doesExist = rndNumArr.find(el => el === rndNum);\n\n            if (doesExist === undefined) {\n                rndNumArr.push(rndNum);\n            } else {\n                return rndNumGenerator();\n            }\n        };\n        for (let i = 0; i < 16; i++) {\n            rndNumGenerator();\n        }\n\n        data.forEach((el, ind) => {\n            if (rndNumArr[ind] === 16) {\n                rndNumArr[ind] = null;\n            }\n            el.num = rndNumArr[ind];\n        });\n        this.setState({ table: data, didWin: false });\n    };\n\n    setToNull = () => {\n        let table = [...this.state.table];\n        table.forEach(el => {\n            el.animate = null;\n        });\n        this.setState({ table: table });\n    };\n\n    changeNum = id => {\n        let tileIndex = this.state.table.findIndex(el => {\n            return el.id === id;\n        });\n        const table = [...this.state.table];\n        const nullIndex = this.state.table.findIndex(el => {\n            return el.num === null;\n        });\n\n        if (\n            (nullIndex - tileIndex === 1 &&\n                tileIndex !== 3 &&\n                tileIndex !== 7 &&\n                tileIndex !== 11) ||\n            nullIndex - tileIndex === 4 ||\n            (tileIndex - nullIndex === 1 &&\n                tileIndex !== 4 &&\n                tileIndex !== 8 &&\n                tileIndex !== 12) ||\n            tileIndex - nullIndex === 4\n        ) {\n            this.setToNull();\n            table[nullIndex].num = table[tileIndex].num;\n            if (nullIndex - tileIndex === 1) table[nullIndex].animate = 'slideToLeft';\n            if (nullIndex - tileIndex === 4) table[nullIndex].animate = 'slideToBottom';\n            if (tileIndex - nullIndex === 1) table[nullIndex].animate = 'slideToRight';\n            if (tileIndex - nullIndex === 4) table[nullIndex].animate = 'slideToTop';\n\n            this.setState({ table: table });\n            table[tileIndex].num = null;\n        }\n    };\n\n    toggleInstruction = () => {\n        let Welcome = { ...this.state.Welcome };\n        Welcome.intructionShow = !this.state.Welcome.intructionShow;\n        this.setState({ Welcome: Welcome });\n    };\n\n    gameInit = () => {\n        let Welcome = { ...this.state.Welcome };\n        Welcome.start = true;\n        this.setState({ Welcome: Welcome });\n    };\n\n    winCheker = () => {\n        let data = [...this.state.table];\n        let isTrueArr = [];\n        data.pop();\n        data.forEach(el => {\n            isTrueArr.push(el.num - 1 === el.id);\n        });\n\n        const didWin = isTrueArr.reduce((acc, cur) => {\n            return acc + cur;\n        });\n\n        if (didWin === 15) {\n            this.setState.didWin = true;\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                {this.state.didWin === true ? <WinPage gameReset={this.gameReset} /> : null}\n                <GameInit gameReset={this.gameReset} start={this.state.Welcome.start} />\n                {this.state.Welcome.start === false ? (\n                    <Welcome\n                        gameInit={this.gameInit}\n                        doesShow={this.state.Welcome.intructionShow}\n                        click={this.toggleInstruction}\n                    />\n                ) : null}\n                <TileContainer\n                    table={this.state.table}\n                    click={this.changeNum}\n                    start={this.state.Welcome.start}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './main.scss';\r\nimport './queries.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}